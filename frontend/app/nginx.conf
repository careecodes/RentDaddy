server {
    listen 5173;
    root /usr/share/nginx/html;
    index index.html;

    include /etc/nginx/mime.types;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:;" always;

    # Block known vulnerability exploitation attempts
    location ~* /vendor/phpunit/ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    location ~* /lib/phpunit/ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    location ~* /workspace/drupal/ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    location ~* /laravel/ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    location ~* /(wp-admin|wp-includes|wp-content|xmlrpc\.php) {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }
    
    # Block any PHP files - we don't use PHP
    location ~* \.php$ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    # Block common exploits
    location ~* /(eval-stdin|shell|cmd|phpmyadmin|myadmin|mysql|db|database)\.php$ {
        deny all;
        return 403;
        access_log /var/log/nginx/security.log;
    }

    # Static assets with cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
        access_log off;
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Main application
    location / {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        add_header 'Access-Control-Max-Age' 1728000;

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Always check if file exists, then folder, then fallback to index.html
        try_files $uri $uri/ /index.html =404;
    }

    # Health check endpoint
    location = /healthz {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }
    
    # Block access to .env and other hidden files
    location ~ /\.(?!well-known).* {
        deny all;
        return 403;
    }

    # Enable compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Logging configuration
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;
}